@model IEnumerable<Omnae.BusinessLayer.Models.TaskViewModel>

@using Omnae.Common
@using System.Configuration
@using Omnae.Controllers
@using Omnae.Model.Models

<style>
    #list2, .gridview2 {
        display: none;
    }

    .my-tag {
        margin-right: 10px !important;
        margin-top: 5px !important;
        float: right;
    }
</style>


<div class="card-block">
    <div class="col-lg-12">
        <h4 class="col-md-11">Order Tracking</h4>
        <span class="col-md-1 small-button pull-right">
            <a href="#" class="switcher small-button listview2 green-text"><i class="fas fa-list-ul fa-2x"></i></a>
            <a href="#" class="switcher active small-button gridview2 pink-text"><i class="fas fa-th fa-2x"></i></a>
        </span>
        <br />
        <hr class="gradient" />
    </div>
    @{
        int i = 1;
        int j = 0;
        int maxIcons = Convert.ToInt16(ConfigurationManager.AppSettings["MaxIconsInGrid"]);
    }

    <div id="grid2" class="card-block">
        @{
            DateTime currentDateTime = DateTime.UtcNow;
        }
        @foreach (var tdvm in @Model)
        {
            var td = tdvm.TaskData;
            var order = tdvm.Order;

            // Longer than DaysToExpire will be removed from Order Tracking, excepting for searching
            if (td.StateId == (int)States.ProductionComplete && tdvm.IsForSearch == false)
            {
                int daysToExpire = Convert.ToInt32(ConfigurationManager.AppSettings["DaysToExpire"]);
                TimeSpan diff = td.ModifiedUtc.AddDays(daysToExpire) - currentDateTime;
                if (diff.Ticks < 0)
                {
                    j++;
                    continue;
                }
            }

            <div class="col-md-4">
                <div class="card">

                    <!--Card Header-->

                    @Html.Partial("_CardHeader", td)

                    <div class="wrapper">
                        <div class="card-image card-image-min-height">

                            <!--Card image-->

                            @Html.Partial("_CardImage", td)

                        </div>

                        <div class="card-block my-card-text card-image-min-height">

                            <!--Card text-->

                            <dl class="productInfo dl-horizontal">

                                @*@if (@td.Product.CustomerCompany.Term != null && (@td.StateId == (int)States.OrderPaid || @td.StateId == (int)States.ReOrderPaid))
                                    {
                                        <dt>Term:</dt>
                                        <dd class="my-card-text pink-text">@string.Format("* Payment will be made within {0} days", (int)(@td.ModifiedUtc.AddDays(@td.Product.CustomerCompany.Term.Value) - @DateTime.UtcNow).TotalDays)</dd>
                                    }*@


                                <dt>
                                    State
                                </dt>
                                <dd class="green-text font-weight-bold">
                                    @Omnae.Common.Extensions.StringExtensions.SplitCamelCase(@Enum.GetName(typeof(States), @td.StateId))
                                </dd>

                                @if (order != null)
                                {
                                    <dt>Order Date</dt>
                                    <dd>@order.OrderDate.ToString("yyyy-MM-dd")</dd>

                                    <dt>
                                        Order Qty
                                    </dt>
                                    <dd>
                                        @order.Quantity
                                    </dd>
                                    if (@order.DesireShippingDate != null)
                                    {
                                        <dt>Desired Delivery Date</dt>
                                        <dd>@order.DesireShippingDate.Value.ToString("yyyy-MM-dd")</dd>
                                    }
                                    if (@order.EarliestShippingDate != null)
                                    {
                                        <dt>Earliest Ship Date</dt>
                                        <dd>@order.EarliestShippingDate.Value.ToString("yyyy-MM-dd")</dd>
                                    }
                                    if (order.EstimateCompletionDate != null)
                                    {
                                        <dt>
                                            Est. Completion Date
                                        </dt>
                                        <dd>
                                            @order.EstimateCompletionDate.Value.ToString("yyyy-MM-dd")
                                        </dd>
                                    }
                                    if (order.CustomerPONumber != null)
                                    {
                                        <dt>
                                            PO #
                                        </dt>
                                        <dd class="green-text">
                                            @order.CustomerPONumber
                                        </dd>
                                    }
                                }

                                @Html.Partial("_NextStates", @tdvm)

                            </dl>
                        </div>
                    </div>

                    <div class="card-data primary-background-color">
                        @if (td.StateId == (int)States.BackFromRFQ ||
                            td.StateId == (int)States.OrderInitiated ||
                            td.StateId == (int)States.ReOrderInitiated ||
                            td.StateId == (int)States.ProofingComplete ||
                            td.StateId == (int)States.SampleComplete ||
                            td.StateId == (int)States.QuoteAccepted ||
                            td.StateId == (int)States.NCRCustomerApproval ||
                            td.StateId == (int)States.NCRVendorCorrectivePartsComplete ||
                            td.StateId == (int)States.NCRCustomerCorrectivePartsReceived ||
                            td.StateId == (int)States.NCRCustomerRevisionNeeded)
                        {
                            <a class="col-md-2 red-text action-flag padding-off">
                                <i class="fas fa-flag" title="You have new action event to handle for this part!"></i>
                            </a>
                        }
                        else
                        {
                            <span class="col-md-2 padding-off"></span>
                        }
                        @if (@order != null)
                        {
                            <a class="col-md-8 white-text padding-off" href="@Url.Action("OrderDetails", "Orders", new { @id = @td.TaskId })">ORDER DETAILS</a>
                        }
                        else
                        {
                            <a class="col-md-8 white-text padding-off" href="@Url.Action("Details", "Orders", new { @id = @td.TaskId })">DETAILS</a>
                        }

                        @Html.AntiForgeryToken()

                        @if (td.isTagged == true)
                        {
                            <a class="my-tag green-text" data-id1="@td.TaskId"><i class="fas fa-tag"></i></a>
                        }
                        else
                        {
                            <a class="my-tag" data-id1="@td.TaskId"><i class="fas fa-tag"></i></a>
                        }
                    </div>
                </div>
            </div>

            if (i == maxIcons)
            {
                break;
            }
            i++;
        }

        @if (Model.Count() - j > maxIcons)
        {
            <a class="font-weight-bold text-lg-center" href="@Url.Action("RedirectToFullView", "Home", new { @num = 2 })"><h5 class="col-md-12">...More</h5></a>
        }
    </div>

    <div id="list2" class="card-block">
        <div class="col-md-12">
            @Html.Partial("_DashboardRowColumnNames")
            @foreach (var tdvm in Model)
            {
                var td = tdvm.TaskData;

                // Longer than DaysToExpire will be removed from Order Tracking, excepting for searching
                if (td.StateId == (int)States.ProductionComplete && tdvm.IsForSearch == false)
                {
                    int daysToExpire = Convert.ToInt32(ConfigurationManager.AppSettings["DaysToExpire"]);
                    TimeSpan diff = td.ModifiedUtc.AddDays(daysToExpire) - currentDateTime;
                    if (diff.Ticks < 0)
                    {
                        continue;
                    }
                }

                @Html.Partial("_CustomerLandingListView", tdvm)

            }
        </div>
    </div>
</div>
