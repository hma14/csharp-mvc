@model Omnae.BusinessLayer.Models.StateTransitionViewModel

@using Omnae.Common

<div id="quotedoc" class="col-md-12">

    @if (Model.TaskData.StateId != (int)States.BidForRFQ)
    {
        <h4 class="col-md-12 top-margin-20">Update RFQ <a title="Update RFQ if anyone of the following changes."><i class="fas fa-info-circle"></i></a></h4>
    }
    else
    {
        <h4 class="col-md-12 top-margin-20">Bid for RFQ <a title="The information to be filled below is for bidding this RFQ."><i class="fas fa-info-circle"></i></a></h4>
    }

    @if (Model.RFQVM != null)
    {

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.RFQVM.Id)
        @Html.HiddenFor(model => model.RFQVM.PriceBreakVM.ProductName)
        @Html.HiddenFor(model => model.RFQVM.PriceBreakVM.ProductAvatarUri)
        @Html.HiddenFor(model => model.RFQVM.PriceBreakVM.ProductId)

        <div class="col-md-6 top-margin-40">

            <div>
                @Html.LabelFor(model => model.RFQVM.SampleLeadTime, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.RFQVM.SampleLeadTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RFQVM.SampleLeadTime, "", new { @class = "text-danger" })

            </div>

            <div>
                @Html.LabelFor(model => model.RFQVM.ProductionLeadTime, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.RFQVM.ProductionLeadTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RFQVM.ProductionLeadTime, "", new { @class = "text-danger" })

            </div>

            <div>
                @Html.LabelFor(model => model.RFQVM.ToolingSetupCharges, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.RFQVM.ToolingSetupCharges, new { htmlAttributes = new { @id = "ToolingSetupCharges", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RFQVM.ToolingSetupCharges, "", new { @class = "text-danger" })

            </div>

            <div>
                @Html.LabelFor(model => model.RFQVM.NumberSampleIncluded, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.RFQVM.NumberSampleIncluded, new { htmlAttributes = new { @id = "NumberSampleIncluded", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RFQVM.NumberSampleIncluded, "", new { @class = "text-danger" })

            </div>
        </div>
        <div class="col-md-6 top-margin-40">

            <div>
                @Html.LabelFor(model => model.RFQVM.HarmonizedCode, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.RFQVM.HarmonizedCode, new { htmlAttributes = new { @id = "HarmonizedCode", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RFQVM.HarmonizedCode, "", new { @class = "text-danger" })
            </div>

            @if (Model.RFQVM.QuoteDoc == null)
            {
                <div class="md-form file-field row">
                    <div class="btn grey-background-color col-xs-3 small-button">
                        <span class="fileupload">Browse</span>
                        <input type="file" name="uploadedFile" id="uploadedQuoteFile" multiple>
                    </div>
                    <div class="col-xs-8 file-path-wrapper">
                        <input class="file-path validate text-xs-center" type="text" style="font-size:0.8em;" placeholder="Upload Official Quote in PDF format" disabled>
                    </div>

                    @if (TempData["AzureException"] != null)
                    {
                        <p class="red-text"> @TempData["AzureException"]</p>
                    }
                </div>
            }
            else
            {
                TempData["StateTransitionViewModel"] = Model;
                <div class="md-form">
                    <a href="@Model.RFQVM.QuoteDoc.DocUri">@Model.RFQVM.QuoteDoc.Name</a>
                    <a class="del pull-xs-right blue-text" data-id="@Model.RFQVM.QuoteDoc.Id"><i class="far fa-trash-alt"></i></a>
                </div>
            }
        </div>
        
        <h4 class="col-md-12 top-margin-20">Setup Pricebreaks <a title="Setup price breaks for customer."><i class="fas fa-info-circle"></i></a></h4>
        <div id="setuppricebreak">
            @Html.Partial("_SetupPricebreaksForBid", Model)
        </div>
        
        <h4 class="col-md-12 top-margin-30">Create Shipping Quote <a title="Fill the data for DHL shipping quote"><i class="fas fa-info-circle"></i></a></h4>
        <div>
            @Html.Partial("_DHLShippingQuoteForBid", Model)
        </div>
    }
</div>

<script>
    
    $(function () {

        $('.del').click(function () {
            $('#spinner').show();
            var $id = $(this).data('id');

            $.ajax({
                url: '@Url.Action("DeleteQuoteDoc", "Documents")',
                type: 'POST',
                data: { id: $id },
                success: function(result) {
                    $('#quotedoc').html(result);
                    $('#spinner').hide();
                    //window.location.reload();

                }
            });
        });
    });

</script>
