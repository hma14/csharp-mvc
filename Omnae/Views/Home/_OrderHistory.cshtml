@model IList<Omnae.ViewModels.OrderHistoryViewModel>

@using Omnae.Common


@if (Model != null)
{

    <table id="wipstatusreport" cellspacing="2" class=" table table-bordered tablesorter">
        <colgroup>
            <col style="width:3%;">
            <col style="width:7%;">
            <col style="width:7%;">
            <col style="width:7%;">
            <col style="width:7%;">
            <col style="width:7%;">
            <col style="width:7%;">
            <col style="width:8%;">
            <col style="width:6%;">
            <col style="width:7%;">
            <col style="width:6%;">
            <col style="width:6%;">
            <col style="width:8%;">
        </colgroup>
        <thead>
            <tr>

                <th style="text-align:center;">#</th>
                <th class="header">@Html.LabelFor(m => Model[0].OrderDate)</th>
                <th class="header">@Html.LabelFor(m => Model[0].RequestedShipDate)</th>
                <th class="header">@Html.LabelFor(m => Model[0].EstimateShippedDate)</th>
                <th class="header">@Html.LabelFor(m => Model[0].ShippedDate)</th>
                <th class="header">@Html.LabelFor(m => Model[0].PartNumber)</th>
                <th class="header">@Html.LabelFor(m => Model[0].PartNumberRevision)</th>
                <th class="header">@Html.LabelFor(m => Model[0].EstimateNumber)</th>
                <th class="header">@Html.LabelFor(m => Model[0].CustomerName)</th>
                <th class="header">@Html.LabelFor(m => Model[0].CustomerPONumber)</th>
                <th class="header">@Html.LabelFor(m => Model[0].VendorName)</th>
                <th class="header">@Html.LabelFor(m => Model[0].VendorPONumber)</th>
                <th class="header">@Html.LabelFor(m => Model[0].CarrierName)</th>
                <th class="header">@Html.LabelFor(m => Model[0].TrackingNumber)</th>
                <th class="header">@Html.LabelFor(m => Model[0].Notes)</th>
            </tr>
        </thead>
        <tbody>

            @if (Model != null && Model.Any())
            {
                int count = 1;
                foreach (var item in Model)
                {
                    <tr class="line">
                        <td style="text-align:center;">@count</td>
                        <td>@Html.Raw(item.OrderDate.ToString(string.Format("MM/dd/yyyy")))</td>
                        <td>
                            @Html.Raw(item.RequestedShipDate != null ? item.RequestedShipDate.Value.ToString(string.Format("MM/dd/yyyy")) : null)
                        </td>
                        <td>
                            @Html.Raw(item.EstimateShippedDate != null && item.EstimateShippedDate.Value.Ticks > 0 ? item.EstimateShippedDate.Value.ToString(string.Format("MM/dd/yyyy")) : null)
                        </td>
                        <td>@Html.Raw(item.ShippedDate?.ToString(string.Format("MM/dd/yyyy")))</td>
                        <td>@Html.DisplayFor(m => item.PartNumber)</td>
                        <td>@Html.DisplayFor(m => item.PartNumberRevision)</td>
                        <td>@Html.DisplayFor(m => item.EstimateNumber)</td>
                        <td>@Html.DisplayFor(m => item.CustomerName)</td>
                        <td>
                            @if (item.CustomerPONumber != null && !item.CustomerPONumber.Equals("0"))
                            {
                                <a href="@item.CustomerPOUri" target="_blank">@Html.DisplayFor(m => item.CustomerPONumber)</a>
                            }
                        </td>
                        <td>@Html.DisplayFor(m => item.VendorName)</td>
                        <td>
                            @if (item.VendorPONumber != null && !item.VendorPONumber.Equals("0"))
                            {
                                <a href="@item.VendorPOUri" target="_blank">@Html.DisplayFor(m => item.VendorPONumber)</a>
                            }
                        </td>

                        <td>@Html.DisplayFor(m => item.CarrierName)</td>
                        <td>@Html.DisplayFor(m => item.TrackingNumber)</td>
                        <td>
                            <textarea id="notes" data-type="text" data-pk="@item.OrderId" rows="2" cols="50" class="form-control xeditable no-margin green-text" style="font-size:1em;">
                                @item.Notes
                            </textarea>
                        </td>
                    </tr>
                    count++;
                }
            }
        </tbody>
    </table>

}
else
{
    if (TempData["ErrorMessage"] != null)
    {
        <div class="red-text text-md-center">@TempData["ErrorMessage"].ToString()</div>
    }
}



<script type="text/javascript">
    $(function () {
        $('#wipstatusreport')
            .tablesorter({ widthFixed: false, widgets: ['zebra'] });
        //.tablesorterPager({ container: $("#pager") });
    });

    var $url = '//' + window.location.host + '/Home/AddNotes';

    $.fn.editable.defaults.mode = 'inline';
    $('.xeditable').editable({

        url: function (params) {
            return $.ajax({
                type: 'POST',
                url: $url,
                data: JSON.stringify(params),
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                async: true,
                cache: false,
                success: function (response, newValue) {
                    $(this).html(newValue);
                },
                error: function () {
                    alertify.error("Error in Ajax");
                }
            });
        }
    });
</script>
